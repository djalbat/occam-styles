"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default1;
    }
});
var _default = require("../../scheme/syntax/default");
var _furtle = require("../../scheme/syntax/furtle");
var furtleSyntaxStyle = "\n\n  div.furtle.lines > div.line > div.syntax > .type { color: ".concat(_furtle.typeColour, "; }\n\n  div.furtle.lines > div.line > div.syntax > .query { color: ").concat(_furtle.queryColour, "; }\n\n  div.furtle.lines > div.line > div.syntax > .return { color: ").concat(_furtle.returnColour, "; }\n  \n  div.furtle.lines > div.line > div.syntax > .bracket { color: ").concat(_furtle.bracketColour, "; }\n  \n  div.furtle.lines > div.line > div.syntax > .special { color: ").concat(_furtle.specialColour, "; }\n  \n  div.furtle.lines > div.line > div.syntax > .keyword { color: ").concat(_furtle.keywordColour, "; }\n  \n  div.furtle.lines > div.line > div.syntax > .comment { color: ").concat(_default.commentColour, "; }\n  \n  div.furtle.lines > div.line > div.syntax > .nonsense { color: ").concat(_default.nonsenseColour, "; } \n\n  div.furtle.lines > div.line > div.syntax > .operator { color: ").concat(_furtle.operatorColour, "; }\n  \n  div.furtle.lines > div.line > div.syntax > .primitive { color: ").concat(_furtle.primitiveColour, "; }\n\n  div.furtle.lines > div.line > div.syntax > .expression { color: ").concat(_furtle.expressionColour, "; }\n\n  div.furtle.lines > div.line > div.syntax > .string-literal { color: ").concat(_default.stringLiteralColour, "; }\n  \n  div.furtle.lines > div.line > div.syntax > .label-name { color: ").concat(_furtle.labelNameColour, "; }\n  \n  div.furtle.lines > div.line > div.syntax > .label-name:hover { color: ").concat(_furtle.labelNameHoverColour, "; }\n\n  div.furtle.lines > div.line > div.syntax > .label-name:disabled { color: ").concat(_furtle.disabledLabelNameColour, "; }\n  \n  div.furtle.lines > div.line > div.syntax > .reference-name { color: ").concat(_furtle.referenceNameColour, "; }\n  \n  div.furtle.lines > div.line > div.syntax > .reference-name:hover { color: ").concat(_furtle.referenceNameHoverColour, "; }\n\n  div.furtle.lines > div.line > div.syntax > .reference-name:disabled { color: ").concat(_furtle.disabledReferenceNameColour, "; }\n\n  div.furtle.lines > div.line > div.syntax > .error {\n    color: ").concat(_default.errorColour, ";\n    text-decoration-line: underline;\n    text-decoration-color: ").concat(_default.errorTextDecorationColour, ";\n  } \n\n");
var _default1 = furtleSyntaxStyle;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHlsZS9zeW50YXgvZnVydGxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBlcnJvckNvbG91ciwgY29tbWVudENvbG91ciwgbm9uc2Vuc2VDb2xvdXIsIHN0cmluZ0xpdGVyYWxDb2xvdXIsIGVycm9yVGV4dERlY29yYXRpb25Db2xvdXIgfSBmcm9tIFwiLi4vLi4vc2NoZW1lL3N5bnRheC9kZWZhdWx0XCI7XG5pbXBvcnQgeyB0eXBlQ29sb3VyLFxuICAgICAgICAgcXVlcnlDb2xvdXIsXG4gICAgICAgICByZXR1cm5Db2xvdXIsXG4gICAgICAgICBicmFja2V0Q29sb3VyLFxuICAgICAgICAgc3BlY2lhbENvbG91cixcbiAgICAgICAgIGtleXdvcmRDb2xvdXIsXG4gICAgICAgICBvcGVyYXRvckNvbG91cixcbiAgICAgICAgIHByaW1pdGl2ZUNvbG91cixcbiAgICAgICAgIGV4cHJlc3Npb25Db2xvdXIsXG4gICAgICAgICBsYWJlbE5hbWVDb2xvdXIsXG4gICAgICAgICByZWZlcmVuY2VOYW1lQ29sb3VyLFxuICAgICAgICAgbGFiZWxOYW1lSG92ZXJDb2xvdXIsXG4gICAgICAgICBkaXNhYmxlZExhYmVsTmFtZUNvbG91cixcbiAgICAgICAgIHJlZmVyZW5jZU5hbWVIb3ZlckNvbG91cixcbiAgICAgICAgIGRpc2FibGVkUmVmZXJlbmNlTmFtZUNvbG91ciB9IGZyb20gXCIuLi8uLi9zY2hlbWUvc3ludGF4L2Z1cnRsZVwiO1xuXG5jb25zdCBmdXJ0bGVTeW50YXhTdHlsZSA9IGBcblxuICBkaXYuZnVydGxlLmxpbmVzID4gZGl2LmxpbmUgPiBkaXYuc3ludGF4ID4gLnR5cGUgeyBjb2xvcjogJHt0eXBlQ29sb3VyfTsgfVxuXG4gIGRpdi5mdXJ0bGUubGluZXMgPiBkaXYubGluZSA+IGRpdi5zeW50YXggPiAucXVlcnkgeyBjb2xvcjogJHtxdWVyeUNvbG91cn07IH1cblxuICBkaXYuZnVydGxlLmxpbmVzID4gZGl2LmxpbmUgPiBkaXYuc3ludGF4ID4gLnJldHVybiB7IGNvbG9yOiAke3JldHVybkNvbG91cn07IH1cbiAgXG4gIGRpdi5mdXJ0bGUubGluZXMgPiBkaXYubGluZSA+IGRpdi5zeW50YXggPiAuYnJhY2tldCB7IGNvbG9yOiAke2JyYWNrZXRDb2xvdXJ9OyB9XG4gIFxuICBkaXYuZnVydGxlLmxpbmVzID4gZGl2LmxpbmUgPiBkaXYuc3ludGF4ID4gLnNwZWNpYWwgeyBjb2xvcjogJHtzcGVjaWFsQ29sb3VyfTsgfVxuICBcbiAgZGl2LmZ1cnRsZS5saW5lcyA+IGRpdi5saW5lID4gZGl2LnN5bnRheCA+IC5rZXl3b3JkIHsgY29sb3I6ICR7a2V5d29yZENvbG91cn07IH1cbiAgXG4gIGRpdi5mdXJ0bGUubGluZXMgPiBkaXYubGluZSA+IGRpdi5zeW50YXggPiAuY29tbWVudCB7IGNvbG9yOiAke2NvbW1lbnRDb2xvdXJ9OyB9XG4gIFxuICBkaXYuZnVydGxlLmxpbmVzID4gZGl2LmxpbmUgPiBkaXYuc3ludGF4ID4gLm5vbnNlbnNlIHsgY29sb3I6ICR7bm9uc2Vuc2VDb2xvdXJ9OyB9IFxuXG4gIGRpdi5mdXJ0bGUubGluZXMgPiBkaXYubGluZSA+IGRpdi5zeW50YXggPiAub3BlcmF0b3IgeyBjb2xvcjogJHtvcGVyYXRvckNvbG91cn07IH1cbiAgXG4gIGRpdi5mdXJ0bGUubGluZXMgPiBkaXYubGluZSA+IGRpdi5zeW50YXggPiAucHJpbWl0aXZlIHsgY29sb3I6ICR7cHJpbWl0aXZlQ29sb3VyfTsgfVxuXG4gIGRpdi5mdXJ0bGUubGluZXMgPiBkaXYubGluZSA+IGRpdi5zeW50YXggPiAuZXhwcmVzc2lvbiB7IGNvbG9yOiAke2V4cHJlc3Npb25Db2xvdXJ9OyB9XG5cbiAgZGl2LmZ1cnRsZS5saW5lcyA+IGRpdi5saW5lID4gZGl2LnN5bnRheCA+IC5zdHJpbmctbGl0ZXJhbCB7IGNvbG9yOiAke3N0cmluZ0xpdGVyYWxDb2xvdXJ9OyB9XG4gIFxuICBkaXYuZnVydGxlLmxpbmVzID4gZGl2LmxpbmUgPiBkaXYuc3ludGF4ID4gLmxhYmVsLW5hbWUgeyBjb2xvcjogJHtsYWJlbE5hbWVDb2xvdXJ9OyB9XG4gIFxuICBkaXYuZnVydGxlLmxpbmVzID4gZGl2LmxpbmUgPiBkaXYuc3ludGF4ID4gLmxhYmVsLW5hbWU6aG92ZXIgeyBjb2xvcjogJHtsYWJlbE5hbWVIb3ZlckNvbG91cn07IH1cblxuICBkaXYuZnVydGxlLmxpbmVzID4gZGl2LmxpbmUgPiBkaXYuc3ludGF4ID4gLmxhYmVsLW5hbWU6ZGlzYWJsZWQgeyBjb2xvcjogJHtkaXNhYmxlZExhYmVsTmFtZUNvbG91cn07IH1cbiAgXG4gIGRpdi5mdXJ0bGUubGluZXMgPiBkaXYubGluZSA+IGRpdi5zeW50YXggPiAucmVmZXJlbmNlLW5hbWUgeyBjb2xvcjogJHtyZWZlcmVuY2VOYW1lQ29sb3VyfTsgfVxuICBcbiAgZGl2LmZ1cnRsZS5saW5lcyA+IGRpdi5saW5lID4gZGl2LnN5bnRheCA+IC5yZWZlcmVuY2UtbmFtZTpob3ZlciB7IGNvbG9yOiAke3JlZmVyZW5jZU5hbWVIb3ZlckNvbG91cn07IH1cblxuICBkaXYuZnVydGxlLmxpbmVzID4gZGl2LmxpbmUgPiBkaXYuc3ludGF4ID4gLnJlZmVyZW5jZS1uYW1lOmRpc2FibGVkIHsgY29sb3I6ICR7ZGlzYWJsZWRSZWZlcmVuY2VOYW1lQ29sb3VyfTsgfVxuXG4gIGRpdi5mdXJ0bGUubGluZXMgPiBkaXYubGluZSA+IGRpdi5zeW50YXggPiAuZXJyb3Ige1xuICAgIGNvbG9yOiAke2Vycm9yQ29sb3VyfTtcbiAgICB0ZXh0LWRlY29yYXRpb24tbGluZTogdW5kZXJsaW5lO1xuICAgIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogJHtlcnJvclRleHREZWNvcmF0aW9uQ29sb3VyfTtcbiAgfSBcblxuYDtcblxuZXhwb3J0IGRlZmF1bHQgZnVydGxlU3ludGF4U3R5bGU7XG4iXSwibmFtZXMiOlsiZnVydGxlU3ludGF4U3R5bGUiLCJxdWVyeUNvbG91ciIsInR5cGVDb2xvdXIiLCJyZXR1cm5Db2xvdXIiLCJicmFja2V0Q29sb3VyIiwic3BlY2lhbENvbG91ciIsImtleXdvcmRDb2xvdXIiLCJjb21tZW50Q29sb3VyIiwibm9uc2Vuc2VDb2xvdXIiLCJvcGVyYXRvckNvbG91ciIsInByaW1pdGl2ZUNvbG91ciIsImV4cHJlc3Npb25Db2xvdXIiLCJzdHJpbmdMaXRlcmFsQ29sb3VyIiwibGFiZWxOYW1lQ29sb3VyIiwibGFiZWxOYW1lSG92ZXJDb2xvdXIiLCJkaXNhYmxlZExhYmVsTmFtZUNvbG91ciIsInJlZmVyZW5jZU5hbWVDb2xvdXIiLCJyZWZlcmVuY2VOYW1lSG92ZXJDb2xvdXIiLCJkaXNhYmxlZFJlZmVyZW5jZU5hbWVDb2xvdXIiLCJlcnJvckNvbG91ciIsImVycm9yVGV4dERlY29yYXRpb25Db2xvdXIiXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQWlFQTs7O2VBQUE7Ozt1QkEvRDJHO3NCQWUvRDtBQUU1QyxJQUFNQSxvQkFBb0IsQUFBQyxtRUFJb0NDLE9BRkRDLGtCQUFVLEVBQUMsd0VBSVRDLE9BRkRGLG1CQUFXLEVBQUMseUVBSVZHLE9BRkRELG9CQUFZLEVBQUMsNEVBSVpFLE9BRkFELHFCQUFhLEVBQUMsNEVBSWRFLE9BRkFELHFCQUFhLEVBQUMsNEVBSWRFLE9BRkFELHFCQUFhLEVBQUMsNEVBSWJFLE9BRkRELHNCQUFhLEVBQUMsNkVBSWJFLE9BRkFELHVCQUFjLEVBQUMsNEVBSWRFLE9BRkRELHNCQUFjLEVBQUMsOEVBSWJFLE9BRkRELHVCQUFlLEVBQUMsNkVBSVhFLE9BRkpELHdCQUFnQixFQUFDLGlGQUlqQkUsT0FGSUQsNEJBQW1CLEVBQUMsK0VBSWxCRSxPQUZORCx1QkFBZSxFQUFDLHFGQUlQRSxPQUZIRCw0QkFBb0IsRUFBQyxzRkFJdkJFLE9BRktELCtCQUF1QixFQUFDLG1GQUl2QkUsT0FGTkQsMkJBQW1CLEVBQUMseUZBSVhFLE9BRkhELGdDQUF3QixFQUFDLDBGQUsxRkUsT0FIb0VELG1DQUEyQixFQUFDLDZFQUtoRkUsT0FGaEJELG9CQUFXLEVBQUMsd0VBRThCLE9BQTFCQyxrQ0FBeUIsRUFBQztJQUt2RCxZQUFlcEIifQ==