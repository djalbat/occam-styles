"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _occamColours = require("occam-colours");

var stringLiteralColour = _occamColours.metaJSONSyntaxScheme.stringLiteralColour,
    dependencyColour = _occamColours.metaJSONSyntaxScheme.dependencyColour,
    dependencyHoverColour = _occamColours.metaJSONSyntaxScheme.dependencyHoverColour,
    faultyDependencyColour = _occamColours.metaJSONSyntaxScheme.faultyDependencyColour,
    faultyDependencyHoverColour = _occamColours.metaJSONSyntaxScheme.faultyDependencyHoverColour,
    disabledDependencyColour = _occamColours.metaJSONSyntaxScheme.disabledDependencyColour,
    disabledDependencyHoverColour = _occamColours.metaJSONSyntaxScheme.disabledDependencyHoverColour,
    repositoryColour = _occamColours.metaJSONSyntaxScheme.repositoryColour,
    repositoryHoverColour = _occamColours.metaJSONSyntaxScheme.repositoryHoverColour,
    faultyRepositoryColour = _occamColours.metaJSONSyntaxScheme.faultyRepositoryColour,
    faultyRepositoryHoverColour = _occamColours.metaJSONSyntaxScheme.faultyRepositoryHoverColour,
    disabledRepositoryColour = _occamColours.metaJSONSyntaxScheme.disabledRepositoryColour,
    disabledRepositoryHoverColour = _occamColours.metaJSONSyntaxScheme.disabledRepositoryHoverColour;
var metaJSONSyntaxStyle = "\n\n  .meta-json.syntax > .string-literal { color: ".concat(stringLiteralColour, "; }\n\n  .meta-json.syntax > .dependency { color: ").concat(dependencyColour, "; }\n\n  .meta-json.syntax > .dependency:hover { color: ").concat(dependencyHoverColour, "; }\n\n  .meta-json.syntax > .dependency.faulty { color: ").concat(faultyDependencyColour, "; }\n\n  .meta-json.syntax > .dependency.faulty:hover { color: ").concat(faultyDependencyHoverColour, "; }\n\n  .meta-json.syntax > .dependency.disabled { color: ").concat(disabledDependencyColour, "; }\n\n  .meta-json.syntax > .dependency.disabled:hover { color: ").concat(disabledDependencyHoverColour, "; }\n\n  .meta-json.syntax > .repository, .meta-json.syntax > .repository a { color: ").concat(repositoryColour, "; }\n\n  .meta-json.syntax > .repository:hover, .meta-json.syntax > .repository a:hover { color: ").concat(repositoryHoverColour, "; }\n\n  .meta-json.syntax > .repository.faulty, .meta-json.syntax > .repository.faulty a { color: ").concat(faultyRepositoryColour, "; }\n\n  .meta-json.syntax > .repository.faulty:hover, .meta-json.syntax > .repository.faulty a:hover { color: ").concat(faultyRepositoryHoverColour, "; }\n\n  .meta-json.syntax > .repository.disabled, .meta-json.syntax > .repository.disabled a { color: ").concat(disabledRepositoryColour, "; }\n\n  .meta-json.syntax > .repository.disabled:hover, .meta-json.syntax > .repository.disabled a:hover { color: ").concat(disabledRepositoryHoverColour, "; }\n\n");
var _default = metaJSONSyntaxStyle;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGFKU09OLmpzIl0sIm5hbWVzIjpbInN0cmluZ0xpdGVyYWxDb2xvdXIiLCJtZXRhSlNPTlN5bnRheFNjaGVtZSIsImRlcGVuZGVuY3lDb2xvdXIiLCJkZXBlbmRlbmN5SG92ZXJDb2xvdXIiLCJmYXVsdHlEZXBlbmRlbmN5Q29sb3VyIiwiZmF1bHR5RGVwZW5kZW5jeUhvdmVyQ29sb3VyIiwiZGlzYWJsZWREZXBlbmRlbmN5Q29sb3VyIiwiZGlzYWJsZWREZXBlbmRlbmN5SG92ZXJDb2xvdXIiLCJyZXBvc2l0b3J5Q29sb3VyIiwicmVwb3NpdG9yeUhvdmVyQ29sb3VyIiwiZmF1bHR5UmVwb3NpdG9yeUNvbG91ciIsImZhdWx0eVJlcG9zaXRvcnlIb3ZlckNvbG91ciIsImRpc2FibGVkUmVwb3NpdG9yeUNvbG91ciIsImRpc2FibGVkUmVwb3NpdG9yeUhvdmVyQ29sb3VyIiwibWV0YUpTT05TeW50YXhTdHlsZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFFQTs7SUFFUUEsbUIsR0FZa0NDLGtDLENBWmxDRCxtQjtJQUNBRSxnQixHQVdrQ0Qsa0MsQ0FYbENDLGdCO0lBQ0FDLHFCLEdBVWtDRixrQyxDQVZsQ0UscUI7SUFDQUMsc0IsR0FTa0NILGtDLENBVGxDRyxzQjtJQUNBQywyQixHQVFrQ0osa0MsQ0FSbENJLDJCO0lBQ0FDLHdCLEdBT2tDTCxrQyxDQVBsQ0ssd0I7SUFDQUMsNkIsR0FNa0NOLGtDLENBTmxDTSw2QjtJQUNBQyxnQixHQUtrQ1Asa0MsQ0FMbENPLGdCO0lBQ0FDLHFCLEdBSWtDUixrQyxDQUpsQ1EscUI7SUFDQUMsc0IsR0FHa0NULGtDLENBSGxDUyxzQjtJQUNBQywyQixHQUVrQ1Ysa0MsQ0FGbENVLDJCO0lBQ0FDLHdCLEdBQ2tDWCxrQyxDQURsQ1csd0I7SUFDQUMsNkIsR0FBa0NaLGtDLENBQWxDWSw2QjtBQUVSLElBQU1DLG1CQUFtQixnRUFFd0JkLG1CQUZ4QiwrREFJb0JFLGdCQUpwQixxRUFNMEJDLHFCQU4xQixzRUFRMkJDLHNCQVIzQiw0RUFVaUNDLDJCQVZqQyx3RUFZNkJDLHdCQVo3Qiw4RUFjbUNDLDZCQWRuQyxrR0FnQnVEQyxnQkFoQnZELDhHQWtCbUVDLHFCQWxCbkUsZ0hBb0JxRUMsc0JBcEJyRSw0SEFzQmlGQywyQkF0QmpGLG9IQXdCeUVDLHdCQXhCekUsZ0lBMEJxRkMsNkJBMUJyRixZQUF6QjtlQThCZUMsbUIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgbWV0YUpTT05TeW50YXhTY2hlbWUgfSBmcm9tIFwib2NjYW0tY29sb3Vyc1wiO1xuXG5jb25zdCB7IHN0cmluZ0xpdGVyYWxDb2xvdXIsXG4gICAgICAgIGRlcGVuZGVuY3lDb2xvdXIsXG4gICAgICAgIGRlcGVuZGVuY3lIb3ZlckNvbG91cixcbiAgICAgICAgZmF1bHR5RGVwZW5kZW5jeUNvbG91cixcbiAgICAgICAgZmF1bHR5RGVwZW5kZW5jeUhvdmVyQ29sb3VyLFxuICAgICAgICBkaXNhYmxlZERlcGVuZGVuY3lDb2xvdXIsXG4gICAgICAgIGRpc2FibGVkRGVwZW5kZW5jeUhvdmVyQ29sb3VyLFxuICAgICAgICByZXBvc2l0b3J5Q29sb3VyLFxuICAgICAgICByZXBvc2l0b3J5SG92ZXJDb2xvdXIsXG4gICAgICAgIGZhdWx0eVJlcG9zaXRvcnlDb2xvdXIsXG4gICAgICAgIGZhdWx0eVJlcG9zaXRvcnlIb3ZlckNvbG91cixcbiAgICAgICAgZGlzYWJsZWRSZXBvc2l0b3J5Q29sb3VyLFxuICAgICAgICBkaXNhYmxlZFJlcG9zaXRvcnlIb3ZlckNvbG91ciB9ID0gbWV0YUpTT05TeW50YXhTY2hlbWU7XG5cbmNvbnN0IG1ldGFKU09OU3ludGF4U3R5bGUgPSBgXG5cbiAgLm1ldGEtanNvbi5zeW50YXggPiAuc3RyaW5nLWxpdGVyYWwgeyBjb2xvcjogJHtzdHJpbmdMaXRlcmFsQ29sb3VyfTsgfVxuXG4gIC5tZXRhLWpzb24uc3ludGF4ID4gLmRlcGVuZGVuY3kgeyBjb2xvcjogJHtkZXBlbmRlbmN5Q29sb3VyfTsgfVxuXG4gIC5tZXRhLWpzb24uc3ludGF4ID4gLmRlcGVuZGVuY3k6aG92ZXIgeyBjb2xvcjogJHtkZXBlbmRlbmN5SG92ZXJDb2xvdXJ9OyB9XG5cbiAgLm1ldGEtanNvbi5zeW50YXggPiAuZGVwZW5kZW5jeS5mYXVsdHkgeyBjb2xvcjogJHtmYXVsdHlEZXBlbmRlbmN5Q29sb3VyfTsgfVxuXG4gIC5tZXRhLWpzb24uc3ludGF4ID4gLmRlcGVuZGVuY3kuZmF1bHR5OmhvdmVyIHsgY29sb3I6ICR7ZmF1bHR5RGVwZW5kZW5jeUhvdmVyQ29sb3VyfTsgfVxuXG4gIC5tZXRhLWpzb24uc3ludGF4ID4gLmRlcGVuZGVuY3kuZGlzYWJsZWQgeyBjb2xvcjogJHtkaXNhYmxlZERlcGVuZGVuY3lDb2xvdXJ9OyB9XG5cbiAgLm1ldGEtanNvbi5zeW50YXggPiAuZGVwZW5kZW5jeS5kaXNhYmxlZDpob3ZlciB7IGNvbG9yOiAke2Rpc2FibGVkRGVwZW5kZW5jeUhvdmVyQ29sb3VyfTsgfVxuXG4gIC5tZXRhLWpzb24uc3ludGF4ID4gLnJlcG9zaXRvcnksIC5tZXRhLWpzb24uc3ludGF4ID4gLnJlcG9zaXRvcnkgYSB7IGNvbG9yOiAke3JlcG9zaXRvcnlDb2xvdXJ9OyB9XG5cbiAgLm1ldGEtanNvbi5zeW50YXggPiAucmVwb3NpdG9yeTpob3ZlciwgLm1ldGEtanNvbi5zeW50YXggPiAucmVwb3NpdG9yeSBhOmhvdmVyIHsgY29sb3I6ICR7cmVwb3NpdG9yeUhvdmVyQ29sb3VyfTsgfVxuXG4gIC5tZXRhLWpzb24uc3ludGF4ID4gLnJlcG9zaXRvcnkuZmF1bHR5LCAubWV0YS1qc29uLnN5bnRheCA+IC5yZXBvc2l0b3J5LmZhdWx0eSBhIHsgY29sb3I6ICR7ZmF1bHR5UmVwb3NpdG9yeUNvbG91cn07IH1cblxuICAubWV0YS1qc29uLnN5bnRheCA+IC5yZXBvc2l0b3J5LmZhdWx0eTpob3ZlciwgLm1ldGEtanNvbi5zeW50YXggPiAucmVwb3NpdG9yeS5mYXVsdHkgYTpob3ZlciB7IGNvbG9yOiAke2ZhdWx0eVJlcG9zaXRvcnlIb3ZlckNvbG91cn07IH1cblxuICAubWV0YS1qc29uLnN5bnRheCA+IC5yZXBvc2l0b3J5LmRpc2FibGVkLCAubWV0YS1qc29uLnN5bnRheCA+IC5yZXBvc2l0b3J5LmRpc2FibGVkIGEgeyBjb2xvcjogJHtkaXNhYmxlZFJlcG9zaXRvcnlDb2xvdXJ9OyB9XG5cbiAgLm1ldGEtanNvbi5zeW50YXggPiAucmVwb3NpdG9yeS5kaXNhYmxlZDpob3ZlciwgLm1ldGEtanNvbi5zeW50YXggPiAucmVwb3NpdG9yeS5kaXNhYmxlZCBhOmhvdmVyIHsgY29sb3I6ICR7ZGlzYWJsZWRSZXBvc2l0b3J5SG92ZXJDb2xvdXJ9OyB9XG5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IG1ldGFKU09OU3ludGF4U3R5bGU7XG4iXX0=