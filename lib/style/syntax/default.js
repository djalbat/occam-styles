"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default1;
    }
});
var _default = require("../../scheme/syntax/default");
var defaultSyntaxStyle = "\n\n  @keyframes background-color-animation {\n    0%   { background-color: ".concat(_default.backgroundColour, "; }\n    100% { background-color: transparent; }\n  }\n\n  .syntax > div {\n    width: 1000rem;\n  }\n\n  .syntax > div.animate {\n    animation: background-color-animation 1s 1;\n  }\n\n  .syntax > div * { \n    font-size: inherit;\n    line-height: inherit;\n    font-family: inherit;\n  }\n  \n  .syntax > div > * { \n    color: ").concat(_default.colour, "; \n  }\n  \n  .syntax > div > * a {\n    cursor: pointer;\n    pointer-events: auto;\n    text-decoration: none;\n  }\n\n  .syntax > div > * a:hover {\n    text-decoration: underline;\n  }\n\n  .syntax > div > button {\n    cursor: pointer;\n    outline: none;\n    display: inline;\n    pointer-events: auto;\n    background-color: transparent;\n  }\n  \n  .syntax > div > .error {\n    color: ").concat(_default.errorColour, ";\n    text-decoration-line: underline;\n    text-decoration-color: ").concat(_default.underlineColour, ";\n  } \n\n  .syntax > div > .nonsense {\n    color: ").concat(_default.nonsenseColour, ";\n    text-decoration-line: underline;\n    text-decoration-color: ").concat(_default.underlineColour, ";\n  } \n\n");
var _default1 = defaultSyntaxStyle;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHlsZS9zeW50YXgvZGVmYXVsdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgY29sb3VyLCBlcnJvckNvbG91ciwgbm9uc2Vuc2VDb2xvdXIsIHVuZGVybGluZUNvbG91ciwgYmFja2dyb3VuZENvbG91ciB9IGZyb20gXCIuLi8uLi9zY2hlbWUvc3ludGF4L2RlZmF1bHRcIjtcblxuY29uc3QgZGVmYXVsdFN5bnRheFN0eWxlID0gYFxuXG4gIEBrZXlmcmFtZXMgYmFja2dyb3VuZC1jb2xvci1hbmltYXRpb24ge1xuICAgIDAlICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiAke2JhY2tncm91bmRDb2xvdXJ9OyB9XG4gICAgMTAwJSB7IGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG4gIH1cblxuICAuc3ludGF4ID4gZGl2IHtcbiAgICB3aWR0aDogMTAwMHJlbTtcbiAgfVxuXG4gIC5zeW50YXggPiBkaXYuYW5pbWF0ZSB7XG4gICAgYW5pbWF0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yLWFuaW1hdGlvbiAxcyAxO1xuICB9XG5cbiAgLnN5bnRheCA+IGRpdiAqIHsgXG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICB9XG4gIFxuICAuc3ludGF4ID4gZGl2ID4gKiB7IFxuICAgIGNvbG9yOiAke2NvbG91cn07IFxuICB9XG4gIFxuICAuc3ludGF4ID4gZGl2ID4gKiBhIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG5cbiAgLnN5bnRheCA+IGRpdiA+ICogYTpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cblxuICAuc3ludGF4ID4gZGl2ID4gYnV0dG9uIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cbiAgXG4gIC5zeW50YXggPiBkaXYgPiAuZXJyb3Ige1xuICAgIGNvbG9yOiAke2Vycm9yQ29sb3VyfTtcbiAgICB0ZXh0LWRlY29yYXRpb24tbGluZTogdW5kZXJsaW5lO1xuICAgIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogJHt1bmRlcmxpbmVDb2xvdXJ9O1xuICB9IFxuXG4gIC5zeW50YXggPiBkaXYgPiAubm9uc2Vuc2Uge1xuICAgIGNvbG9yOiAke25vbnNlbnNlQ29sb3VyfTtcbiAgICB0ZXh0LWRlY29yYXRpb24tbGluZTogdW5kZXJsaW5lO1xuICAgIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogJHt1bmRlcmxpbmVDb2xvdXJ9O1xuICB9IFxuXG5gO1xuXG5leHBvcnQgZGVmYXVsdCBkZWZhdWx0U3ludGF4U3R5bGU7XG4iXSwibmFtZXMiOlsiZGVmYXVsdFN5bnRheFN0eWxlIiwiY29sb3VyIiwiYmFja2dyb3VuZENvbG91ciIsImVycm9yQ29sb3VyIiwidW5kZXJsaW5lQ29sb3VyIiwibm9uc2Vuc2VDb2xvdXIiXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQTZEQTs7O2VBQUE7Ozt1QkEzRHVGO0FBRXZGLElBQU1BLHFCQUFxQixBQUFDLCtFQXNCZkMsT0FuQmtCQyx5QkFBZ0IsRUFBQyxnVkF5Q25DQyxPQXRCQUYsZUFBTSxFQUFDLGdaQXdCU0csT0FGaEJELG9CQUFXLEVBQUMsd0VBTVpFLE9BSmdCRCx3QkFBZSxFQUFDLHlEQU1oQkEsT0FGaEJDLHVCQUFjLEVBQUMsd0VBRWlCLE9BQWhCRCx3QkFBZSxFQUFDO0lBSzdDLFlBQWVKIn0=