"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default1;
    }
});
var _default = require("../../scheme/syntax/default");
var defaultSyntaxStyle = "\n\n  @keyframes background-color-animation {\n    0%   { background-color: ".concat(_default.backgroundColour, "; }\n    100% { background-color: transparent; }\n  }\n  \n  .syntax > div {\n    width: 1000rem;\n  }\n  \n  .syntax:not(.active) > div {\n    animation: background-color-animation 1s 1;\n  }\n  \n  .syntax > div * { \n    font-size: inherit;\n    line-height: inherit;\n    font-family: inherit;\n  }\n  \n  .syntax > div > * { \n    color: ").concat(_default.colour, "; \n  }\n  \n  .syntax > div > * a {\n    cursor: pointer;\n    pointer-events: auto;\n    text-decoration: none;\n  }\n\n  .syntax > div > * a:hover {\n    text-decoration: underline;\n  }\n\n  .syntax > div > button {\n    cursor: pointer;\n    outline: none;\n    display: inline;\n    pointer-events: auto;\n    background-color: transparent;\n  }\n  \n  .syntax > div > .error {\n    color: ").concat(_default.errorColour, ";\n    text-decoration-line: underline;\n    text-decoration-color: ").concat(_default.underlineColour, ";\n  } \n\n  .syntax > div > .nonsense {\n    color: ").concat(_default.nonsenseColour, ";\n    text-decoration-line: underline;\n    text-decoration-color: ").concat(_default.underlineColour, ";\n  } \n\n");
var _default1 = defaultSyntaxStyle;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHlsZS9zeW50YXgvZGVmYXVsdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgY29sb3VyLCBlcnJvckNvbG91ciwgbm9uc2Vuc2VDb2xvdXIsIHVuZGVybGluZUNvbG91ciwgYmFja2dyb3VuZENvbG91ciB9IGZyb20gXCIuLi8uLi9zY2hlbWUvc3ludGF4L2RlZmF1bHRcIjtcblxuY29uc3QgZGVmYXVsdFN5bnRheFN0eWxlID0gYFxuXG4gIEBrZXlmcmFtZXMgYmFja2dyb3VuZC1jb2xvci1hbmltYXRpb24ge1xuICAgIDAlICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiAke2JhY2tncm91bmRDb2xvdXJ9OyB9XG4gICAgMTAwJSB7IGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG4gIH1cbiAgXG4gIC5zeW50YXggPiBkaXYge1xuICAgIHdpZHRoOiAxMDAwcmVtO1xuICB9XG4gIFxuICAuc3ludGF4Om5vdCguYWN0aXZlKSA+IGRpdiB7XG4gICAgYW5pbWF0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yLWFuaW1hdGlvbiAxcyAxO1xuICB9XG4gIFxuICAuc3ludGF4ID4gZGl2ICogeyBcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIH1cbiAgXG4gIC5zeW50YXggPiBkaXYgPiAqIHsgXG4gICAgY29sb3I6ICR7Y29sb3VyfTsgXG4gIH1cbiAgXG4gIC5zeW50YXggPiBkaXYgPiAqIGEge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cblxuICAuc3ludGF4ID4gZGl2ID4gKiBhOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuXG4gIC5zeW50YXggPiBkaXYgPiBidXR0b24ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxuICBcbiAgLnN5bnRheCA+IGRpdiA+IC5lcnJvciB7XG4gICAgY29sb3I6ICR7ZXJyb3JDb2xvdXJ9O1xuICAgIHRleHQtZGVjb3JhdGlvbi1saW5lOiB1bmRlcmxpbmU7XG4gICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiAke3VuZGVybGluZUNvbG91cn07XG4gIH0gXG5cbiAgLnN5bnRheCA+IGRpdiA+IC5ub25zZW5zZSB7XG4gICAgY29sb3I6ICR7bm9uc2Vuc2VDb2xvdXJ9O1xuICAgIHRleHQtZGVjb3JhdGlvbi1saW5lOiB1bmRlcmxpbmU7XG4gICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiAke3VuZGVybGluZUNvbG91cn07XG4gIH0gXG5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGRlZmF1bHRTeW50YXhTdHlsZTtcbiJdLCJuYW1lcyI6WyJkZWZhdWx0U3ludGF4U3R5bGUiLCJjb2xvdXIiLCJiYWNrZ3JvdW5kQ29sb3VyIiwiZXJyb3JDb2xvdXIiLCJ1bmRlcmxpbmVDb2xvdXIiLCJub25zZW5zZUNvbG91ciJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBNkRBOzs7ZUFBQTs7O3VCQTNEdUY7QUFFdkYsSUFBTUEscUJBQXFCLEFBQUMsK0VBc0JmQyxPQW5Ca0JDLHlCQUFnQixFQUFDLDJWQXlDbkNDLE9BdEJBRixlQUFNLEVBQUMsZ1pBd0JTRyxPQUZoQkQsb0JBQVcsRUFBQyx3RUFNWkUsT0FKZ0JELHdCQUFlLEVBQUMseURBTWhCQSxPQUZoQkMsdUJBQWMsRUFBQyx3RUFFaUIsT0FBaEJELHdCQUFlLEVBQUM7SUFLN0MsWUFBZUoifQ==