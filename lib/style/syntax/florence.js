"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _florence = require("../../scheme/syntax/florence");
var florenceSyntaxStyle = "\n\n  .florence.syntax > .type { color: ".concat(_florence.typeColour, "; }\n\n  .florence.syntax > .special { color: ").concat(_florence.specialColour, "; }\n  \n  .florence.syntax > .comment { color: ").concat(_florence.commentColour, "; }\n  \n  .florence.syntax > .keyword { color: ").concat(_florence.keywordColour, "; }\n  \n  .florence.syntax > .operator { color: ").concat(_florence.operatorColour, "; }\n  \n  .florence.syntax > .meta-type { color: ").concat(_florence.metaTypeColour, "; }\n\n  .florence.syntax > .string-literal { color: ").concat(_florence.stringLiteralColour, "; }\n\n  .florence.syntax > .name.context { color: ").concat(_florence.contextNameColour, "; }\n\n  .florence.syntax > .name.label { color: ").concat(_florence.labelNameColour, "; }\n  \n  .florence.syntax > .name.label:hover { color: ").concat(_florence.labelNameHoverColour, "; }\n\n  .florence.syntax > .name.label.faulty { color: ").concat(_florence.faultyLabelNameColour, "; }\n  \n  .florence.syntax > .name.label.faulty:hover { color: ").concat(_florence.faultyLabelNameHoverColour, "; }\n\n  .florence.syntax > .name.label.disabled { color: ").concat(_florence.disabledLabelNameColour, "; }\n  \n  .florence.syntax > .name.label.disabled:hover { color: ").concat(_florence.disabledLabelNameHoverColour, "; }\n\n  .florence.syntax > .name.reference { color: ").concat(_florence.referenceNameColour, "; }\n  \n  .florence.syntax > .name.reference:hover { color: ").concat(_florence.referenceNameHoverColour, "; }\n\n  .florence.syntax > .name.reference.faulty { color: ").concat(_florence.faultyReferenceNameColour, "; }\n  \n  .florence.syntax > .name.reference.faulty:hover { color: ").concat(_florence.faultyReferenceNameHoverColour, "; }\n\n  .florence.syntax > .name.reference.disabled { color: ").concat(_florence.disabledReferenceNameColour, "; }\n  \n  .florence.syntax > .name.reference.disabled:hover { color: ").concat(_florence.disabledReferenceNameHoverColour, "; }\n\n");
var _default = florenceSyntaxStyle;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHlsZS9zeW50YXgvZmxvcmVuY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHR5cGVDb2xvdXIsXG4gICAgICAgICBzcGVjaWFsQ29sb3VyLFxuICAgICAgICAgY29tbWVudENvbG91cixcbiAgICAgICAgIGtleXdvcmRDb2xvdXIsXG4gICAgICAgICBvcGVyYXRvckNvbG91cixcbiAgICAgICAgIG1ldGFUeXBlQ29sb3VyLFxuICAgICAgICAgbGFiZWxOYW1lQ29sb3VyLFxuICAgICAgICAgY29udGV4dE5hbWVDb2xvdXIsXG4gICAgICAgICByZWZlcmVuY2VOYW1lQ29sb3VyLFxuICAgICAgICAgc3RyaW5nTGl0ZXJhbENvbG91cixcbiAgICAgICAgIGxhYmVsTmFtZUhvdmVyQ29sb3VyLFxuICAgICAgICAgZmF1bHR5TGFiZWxOYW1lQ29sb3VyLFxuICAgICAgICAgZGlzYWJsZWRMYWJlbE5hbWVDb2xvdXIsXG4gICAgICAgICByZWZlcmVuY2VOYW1lSG92ZXJDb2xvdXIsXG4gICAgICAgICBmYXVsdHlSZWZlcmVuY2VOYW1lQ29sb3VyLFxuICAgICAgICAgZmF1bHR5TGFiZWxOYW1lSG92ZXJDb2xvdXIsXG4gICAgICAgICBkaXNhYmxlZFJlZmVyZW5jZU5hbWVDb2xvdXIsXG4gICAgICAgICBkaXNhYmxlZExhYmVsTmFtZUhvdmVyQ29sb3VyLFxuICAgICAgICAgZmF1bHR5UmVmZXJlbmNlTmFtZUhvdmVyQ29sb3VyLFxuICAgICAgICAgZGlzYWJsZWRSZWZlcmVuY2VOYW1lSG92ZXJDb2xvdXIgfSBmcm9tIFwiLi4vLi4vc2NoZW1lL3N5bnRheC9mbG9yZW5jZVwiO1xuXG5jb25zdCBmbG9yZW5jZVN5bnRheFN0eWxlID0gYFxuXG4gIC5mbG9yZW5jZS5zeW50YXggPiAudHlwZSB7IGNvbG9yOiAke3R5cGVDb2xvdXJ9OyB9XG5cbiAgLmZsb3JlbmNlLnN5bnRheCA+IC5zcGVjaWFsIHsgY29sb3I6ICR7c3BlY2lhbENvbG91cn07IH1cbiAgXG4gIC5mbG9yZW5jZS5zeW50YXggPiAuY29tbWVudCB7IGNvbG9yOiAke2NvbW1lbnRDb2xvdXJ9OyB9XG4gIFxuICAuZmxvcmVuY2Uuc3ludGF4ID4gLmtleXdvcmQgeyBjb2xvcjogJHtrZXl3b3JkQ29sb3VyfTsgfVxuICBcbiAgLmZsb3JlbmNlLnN5bnRheCA+IC5vcGVyYXRvciB7IGNvbG9yOiAke29wZXJhdG9yQ29sb3VyfTsgfVxuICBcbiAgLmZsb3JlbmNlLnN5bnRheCA+IC5tZXRhLXR5cGUgeyBjb2xvcjogJHttZXRhVHlwZUNvbG91cn07IH1cblxuICAuZmxvcmVuY2Uuc3ludGF4ID4gLnN0cmluZy1saXRlcmFsIHsgY29sb3I6ICR7c3RyaW5nTGl0ZXJhbENvbG91cn07IH1cblxuICAuZmxvcmVuY2Uuc3ludGF4ID4gLm5hbWUuY29udGV4dCB7IGNvbG9yOiAke2NvbnRleHROYW1lQ29sb3VyfTsgfVxuXG4gIC5mbG9yZW5jZS5zeW50YXggPiAubmFtZS5sYWJlbCB7IGNvbG9yOiAke2xhYmVsTmFtZUNvbG91cn07IH1cbiAgXG4gIC5mbG9yZW5jZS5zeW50YXggPiAubmFtZS5sYWJlbDpob3ZlciB7IGNvbG9yOiAke2xhYmVsTmFtZUhvdmVyQ29sb3VyfTsgfVxuXG4gIC5mbG9yZW5jZS5zeW50YXggPiAubmFtZS5sYWJlbC5mYXVsdHkgeyBjb2xvcjogJHtmYXVsdHlMYWJlbE5hbWVDb2xvdXJ9OyB9XG4gIFxuICAuZmxvcmVuY2Uuc3ludGF4ID4gLm5hbWUubGFiZWwuZmF1bHR5OmhvdmVyIHsgY29sb3I6ICR7ZmF1bHR5TGFiZWxOYW1lSG92ZXJDb2xvdXJ9OyB9XG5cbiAgLmZsb3JlbmNlLnN5bnRheCA+IC5uYW1lLmxhYmVsLmRpc2FibGVkIHsgY29sb3I6ICR7ZGlzYWJsZWRMYWJlbE5hbWVDb2xvdXJ9OyB9XG4gIFxuICAuZmxvcmVuY2Uuc3ludGF4ID4gLm5hbWUubGFiZWwuZGlzYWJsZWQ6aG92ZXIgeyBjb2xvcjogJHtkaXNhYmxlZExhYmVsTmFtZUhvdmVyQ29sb3VyfTsgfVxuXG4gIC5mbG9yZW5jZS5zeW50YXggPiAubmFtZS5yZWZlcmVuY2UgeyBjb2xvcjogJHtyZWZlcmVuY2VOYW1lQ29sb3VyfTsgfVxuICBcbiAgLmZsb3JlbmNlLnN5bnRheCA+IC5uYW1lLnJlZmVyZW5jZTpob3ZlciB7IGNvbG9yOiAke3JlZmVyZW5jZU5hbWVIb3ZlckNvbG91cn07IH1cblxuICAuZmxvcmVuY2Uuc3ludGF4ID4gLm5hbWUucmVmZXJlbmNlLmZhdWx0eSB7IGNvbG9yOiAke2ZhdWx0eVJlZmVyZW5jZU5hbWVDb2xvdXJ9OyB9XG4gIFxuICAuZmxvcmVuY2Uuc3ludGF4ID4gLm5hbWUucmVmZXJlbmNlLmZhdWx0eTpob3ZlciB7IGNvbG9yOiAke2ZhdWx0eVJlZmVyZW5jZU5hbWVIb3ZlckNvbG91cn07IH1cblxuICAuZmxvcmVuY2Uuc3ludGF4ID4gLm5hbWUucmVmZXJlbmNlLmRpc2FibGVkIHsgY29sb3I6ICR7ZGlzYWJsZWRSZWZlcmVuY2VOYW1lQ29sb3VyfTsgfVxuICBcbiAgLmZsb3JlbmNlLnN5bnRheCA+IC5uYW1lLnJlZmVyZW5jZS5kaXNhYmxlZDpob3ZlciB7IGNvbG9yOiAke2Rpc2FibGVkUmVmZXJlbmNlTmFtZUhvdmVyQ29sb3VyfTsgfVxuXG5gO1xuXG5leHBvcnQgZGVmYXVsdCBmbG9yZW5jZVN5bnRheFN0eWxlO1xuIl0sIm5hbWVzIjpbImZsb3JlbmNlU3ludGF4U3R5bGUiLCJzcGVjaWFsQ29sb3VyIiwidHlwZUNvbG91ciIsImNvbW1lbnRDb2xvdXIiLCJrZXl3b3JkQ29sb3VyIiwib3BlcmF0b3JDb2xvdXIiLCJtZXRhVHlwZUNvbG91ciIsInN0cmluZ0xpdGVyYWxDb2xvdXIiLCJjb250ZXh0TmFtZUNvbG91ciIsImxhYmVsTmFtZUNvbG91ciIsImxhYmVsTmFtZUhvdmVyQ29sb3VyIiwiZmF1bHR5TGFiZWxOYW1lQ29sb3VyIiwiZmF1bHR5TGFiZWxOYW1lSG92ZXJDb2xvdXIiLCJkaXNhYmxlZExhYmVsTmFtZUNvbG91ciIsImRpc2FibGVkTGFiZWxOYW1lSG92ZXJDb2xvdXIiLCJyZWZlcmVuY2VOYW1lQ29sb3VyIiwicmVmZXJlbmNlTmFtZUhvdmVyQ29sb3VyIiwiZmF1bHR5UmVmZXJlbmNlTmFtZUNvbG91ciIsImZhdWx0eVJlZmVyZW5jZU5hbWVIb3ZlckNvbG91ciIsImRpc2FibGVkUmVmZXJlbmNlTmFtZUNvbG91ciIsImRpc2FibGVkUmVmZXJlbmNlTmFtZUhvdmVyQ29sb3VyIl0sIm1hcHBpbmdzIjoiQUFBQTs7OzsrQkFtRUE7OztlQUFBOzs7d0JBOUNpRDtBQUVqRCxJQUFNQSxzQkFBc0IsQUFBQywyQ0FJWUMsT0FGSEMsb0JBQVUsRUFBQyxrREFJUkMsT0FGQUYsdUJBQWEsRUFBQyxvREFJZEcsT0FGQUQsdUJBQWEsRUFBQyxvREFJYkUsT0FGREQsdUJBQWEsRUFBQyxxREFJWkUsT0FGREQsd0JBQWMsRUFBQyxzREFJVEUsT0FGTEQsd0JBQWMsRUFBQyx5REFJWkUsT0FGRUQsNkJBQW1CLEVBQUMsdURBSXhCRSxPQUZFRCwyQkFBaUIsRUFBQyxxREFJZEUsT0FGTkQseUJBQWUsRUFBQyw2REFJVEUsT0FGREQsOEJBQW9CLEVBQUMsNERBSWRFLE9BRk5ELCtCQUFxQixFQUFDLG9FQUlwQkUsT0FGSUQsb0NBQTBCLEVBQUMsOERBSXpCRSxPQUZORCxpQ0FBdUIsRUFBQyxzRUFJN0JFLE9BRldELHNDQUE0QixFQUFDLHlEQUlsQ0UsT0FGTkQsNkJBQW1CLEVBQUMsaUVBSWJFLE9BRkRELGtDQUF3QixFQUFDLGdFQUlsQkUsT0FGTkQsbUNBQXlCLEVBQUMsd0VBSXhCRSxPQUZJRCx3Q0FBOEIsRUFBQyxrRUFJN0JFLE9BRk5ELHFDQUEyQixFQUFDLDBFQUVXLE9BQWpDQywwQ0FBZ0MsRUFBQztJQUloRyxXQUFlcEIifQ==