"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default1;
    }
});
var _default = require("../../scheme/syntax/default");
var _markdown = require("../../scheme/syntax/markdown");
var markdownSyntaxStyle = "\n\n  .markdown.syntax > div > * { color: ".concat(_markdown.colour, "; }\n\n  .markdown.syntax > div > .path { color: ").concat(_markdown.pathColour, "; }\n\n  .markdown.syntax > div > .path:hover { color: ").concat(_markdown.pathHoverColour, "; }\n\n  .markdown.syntax > div > .link { color: ").concat(_markdown.linkColour, "; }\n\n  .markdown.syntax > div > .table { color: ").concat(_markdown.tableColour, "; }\n\n  .markdown.syntax > div > .marker { color: ").concat(_markdown.markerColour, "; }\n\n  .markdown.syntax > div > .bullet { color: ").concat(_markdown.bulletColour, "; }\n\n  .markdown.syntax > div > .listing { color: ").concat(_markdown.listingColour, "; }\n\n  .markdown.syntax > div > .heading { color: ").concat(_markdown.headingColour, "; }\n\n  .markdown.syntax > div > .nonsense { color: ").concat(_default.nonsenseColour, "; } \n\n  .markdown.syntax > div > .reference { color: ").concat(_markdown.referenceColour, "; }\n\n  .markdown.syntax > div > .directive { color: ").concat(_markdown.directiveColour, "; }\n\n  .markdown.syntax > div > .error {\n    color: ").concat(_default.errorColour, ";\n    text-decoration-line: underline;\n    text-decoration-color: ").concat(_default.errorTextDecorationColour, ";\n  } \n\n");
var _default1 = markdownSyntaxStyle;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHlsZS9zeW50YXgvbWFya2Rvd24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGVycm9yQ29sb3VyLCBub25zZW5zZUNvbG91ciwgZXJyb3JUZXh0RGVjb3JhdGlvbkNvbG91ciB9IGZyb20gXCIuLi8uLi9zY2hlbWUvc3ludGF4L2RlZmF1bHRcIjtcbmltcG9ydCB7IGNvbG91cixcbiAgICAgICAgIHBhdGhDb2xvdXIsXG4gICAgICAgICBsaW5rQ29sb3VyLFxuICAgICAgICAgdGFibGVDb2xvdXIsXG4gICAgICAgICBtYXJrZXJDb2xvdXIsXG4gICAgICAgICBidWxsZXRDb2xvdXIsXG4gICAgICAgICBsaXN0aW5nQ29sb3VyLFxuICAgICAgICAgaGVhZGluZ0NvbG91cixcbiAgICAgICAgIHJlZmVyZW5jZUNvbG91cixcbiAgICAgICAgIGRpcmVjdGl2ZUNvbG91cixcbiAgICAgICAgIHBhdGhIb3ZlckNvbG91ciB9IGZyb20gXCIuLi8uLi9zY2hlbWUvc3ludGF4L21hcmtkb3duXCI7XG5cbmNvbnN0IG1hcmtkb3duU3ludGF4U3R5bGUgPSBgXG5cbiAgLm1hcmtkb3duLnN5bnRheCA+IGRpdiA+ICogeyBjb2xvcjogJHtjb2xvdXJ9OyB9XG5cbiAgLm1hcmtkb3duLnN5bnRheCA+IGRpdiA+IC5wYXRoIHsgY29sb3I6ICR7cGF0aENvbG91cn07IH1cblxuICAubWFya2Rvd24uc3ludGF4ID4gZGl2ID4gLnBhdGg6aG92ZXIgeyBjb2xvcjogJHtwYXRoSG92ZXJDb2xvdXJ9OyB9XG5cbiAgLm1hcmtkb3duLnN5bnRheCA+IGRpdiA+IC5saW5rIHsgY29sb3I6ICR7bGlua0NvbG91cn07IH1cblxuICAubWFya2Rvd24uc3ludGF4ID4gZGl2ID4gLnRhYmxlIHsgY29sb3I6ICR7dGFibGVDb2xvdXJ9OyB9XG5cbiAgLm1hcmtkb3duLnN5bnRheCA+IGRpdiA+IC5tYXJrZXIgeyBjb2xvcjogJHttYXJrZXJDb2xvdXJ9OyB9XG5cbiAgLm1hcmtkb3duLnN5bnRheCA+IGRpdiA+IC5idWxsZXQgeyBjb2xvcjogJHtidWxsZXRDb2xvdXJ9OyB9XG5cbiAgLm1hcmtkb3duLnN5bnRheCA+IGRpdiA+IC5saXN0aW5nIHsgY29sb3I6ICR7bGlzdGluZ0NvbG91cn07IH1cblxuICAubWFya2Rvd24uc3ludGF4ID4gZGl2ID4gLmhlYWRpbmcgeyBjb2xvcjogJHtoZWFkaW5nQ29sb3VyfTsgfVxuXG4gIC5tYXJrZG93bi5zeW50YXggPiBkaXYgPiAubm9uc2Vuc2UgeyBjb2xvcjogJHtub25zZW5zZUNvbG91cn07IH0gXG5cbiAgLm1hcmtkb3duLnN5bnRheCA+IGRpdiA+IC5yZWZlcmVuY2UgeyBjb2xvcjogJHtyZWZlcmVuY2VDb2xvdXJ9OyB9XG5cbiAgLm1hcmtkb3duLnN5bnRheCA+IGRpdiA+IC5kaXJlY3RpdmUgeyBjb2xvcjogJHtkaXJlY3RpdmVDb2xvdXJ9OyB9XG5cbiAgLm1hcmtkb3duLnN5bnRheCA+IGRpdiA+IC5lcnJvciB7XG4gICAgY29sb3I6ICR7ZXJyb3JDb2xvdXJ9O1xuICAgIHRleHQtZGVjb3JhdGlvbi1saW5lOiB1bmRlcmxpbmU7XG4gICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiAke2Vycm9yVGV4dERlY29yYXRpb25Db2xvdXJ9O1xuICB9IFxuXG5gO1xuXG5leHBvcnQgZGVmYXVsdCBtYXJrZG93blN5bnRheFN0eWxlO1xuIl0sIm5hbWVzIjpbIm1hcmtkb3duU3ludGF4U3R5bGUiLCJwYXRoQ29sb3VyIiwiY29sb3VyIiwicGF0aEhvdmVyQ29sb3VyIiwibGlua0NvbG91ciIsInRhYmxlQ29sb3VyIiwibWFya2VyQ29sb3VyIiwiYnVsbGV0Q29sb3VyIiwibGlzdGluZ0NvbG91ciIsImhlYWRpbmdDb2xvdXIiLCJub25zZW5zZUNvbG91ciIsInJlZmVyZW5jZUNvbG91ciIsImRpcmVjdGl2ZUNvbG91ciIsImVycm9yQ29sb3VyIiwiZXJyb3JUZXh0RGVjb3JhdGlvbkNvbG91ciJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBaURBOzs7ZUFBQTs7O3VCQS9DdUU7d0JBV3ZDO0FBRWhDLElBQU1BLHNCQUFzQixBQUFDLDZDQUllQyxPQUZKQyxnQkFBTSxFQUFDLHFEQUlHQyxPQUZORixvQkFBVSxFQUFDLDJEQUlYRyxPQUZNRCx5QkFBZSxFQUFDLHFEQUlyQkUsT0FGREQsb0JBQVUsRUFBQyxzREFJVEUsT0FGREQscUJBQVcsRUFBQyx1REFJWEUsT0FGQUQsc0JBQVksRUFBQyx1REFJWkUsT0FGREQsc0JBQVksRUFBQyx3REFJWkUsT0FGQUQsdUJBQWEsRUFBQyx3REFJYkUsT0FGREQsdUJBQWEsRUFBQyx5REFJWkUsT0FGREQsdUJBQWMsRUFBQywyREFJZEUsT0FGQUQseUJBQWUsRUFBQywwREFLcERFLE9BSG9DRCx5QkFBZSxFQUFDLDJEQUtwQ0UsT0FGaEJELG9CQUFXLEVBQUMsd0VBRThCLE9BQTFCQyxrQ0FBeUIsRUFBQztJQUt2RCxZQUFlZCJ9