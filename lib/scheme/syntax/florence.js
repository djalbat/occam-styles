"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.disabledReferenceNameHoverColour = exports.disabledReferenceNameColour = exports.faultyReferenceNameHoverColour = exports.faultyReferenceNameColour = exports.referenceNameHoverColour = exports.referenceNameColour = exports.disabledLabelNameHoverColour = exports.disabledLabelNameColour = exports.faultyLabelNameHoverColour = exports.faultyLabelNameColour = exports.labelNameHoverColour = exports.labelNameColour = exports.metavariableNameColour = exports.variableNameColour = exports.contextNameColour = exports.typeNameColour = exports.stringLiteralColour = exports.reservedColour = exports.keywordColour = exports.commentColour = exports.specialColour = exports.customColour = void 0;
var _colours = require("../../colours");
var customColour = _colours.sushi;
exports.customColour = customColour;
var specialColour = _colours.sushi;
exports.specialColour = specialColour;
var commentColour = _colours.pablo;
exports.commentColour = commentColour;
var keywordColour = _colours.razzmatazz;
exports.keywordColour = keywordColour;
var reservedColour = _colours.razzmatazz;
exports.reservedColour = reservedColour;
var stringLiteralColour = _colours.hokeyPokey;
exports.stringLiteralColour = stringLiteralColour;
var typeNameColour = _colours.regentGrey;
exports.typeNameColour = typeNameColour;
var contextNameColour = _colours.cadetBlue;
exports.contextNameColour = contextNameColour;
var variableNameColour = _colours.treePoppy;
exports.variableNameColour = variableNameColour;
var metavariableNameColour = _colours.cadetBlue;
exports.metavariableNameColour = metavariableNameColour;
var labelNameColour = _colours.sycamore;
exports.labelNameColour = labelNameColour;
var labelNameHoverColour = _colours.celery;
exports.labelNameHoverColour = labelNameHoverColour;
var faultyLabelNameColour = _colours.terracotta;
exports.faultyLabelNameColour = faultyLabelNameColour;
var faultyLabelNameHoverColour = _colours.flamingo;
exports.faultyLabelNameHoverColour = faultyLabelNameHoverColour;
var disabledLabelNameColour = _colours.pablo;
exports.disabledLabelNameColour = disabledLabelNameColour;
var disabledLabelNameHoverColour = _colours.hurricane;
exports.disabledLabelNameHoverColour = disabledLabelNameHoverColour;
var referenceNameColour = _colours.sycamore;
exports.referenceNameColour = referenceNameColour;
var referenceNameHoverColour = _colours.celery;
exports.referenceNameHoverColour = referenceNameHoverColour;
var faultyReferenceNameColour = _colours.terracotta;
exports.faultyReferenceNameColour = faultyReferenceNameColour;
var faultyReferenceNameHoverColour = _colours.flamingo;
exports.faultyReferenceNameHoverColour = faultyReferenceNameHoverColour;
var disabledReferenceNameColour = _colours.pablo;
exports.disabledReferenceNameColour = disabledReferenceNameColour;
var disabledReferenceNameHoverColour = _colours.hurricane;
exports.disabledReferenceNameHoverColour = disabledReferenceNameHoverColour;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY2hlbWUvc3ludGF4L2Zsb3JlbmNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBzdXNoaSwgcGFibG8sIHJhenptYXRhenosIGhva2V5UG9rZXksIHJlZ2VudEdyZXksIGNhZGV0Qmx1ZSwgdHJlZVBvcHB5LCBzeWNhbW9yZSwgY2VsZXJ5LCB0ZXJyYWNvdHRhLCBmbGFtaW5nbywgaHVycmljYW5lIH0gZnJvbSBcIi4uLy4uL2NvbG91cnNcIjtcblxuZXhwb3J0IGNvbnN0IGN1c3RvbUNvbG91ciA9IHN1c2hpO1xuXG5leHBvcnQgY29uc3Qgc3BlY2lhbENvbG91ciA9IHN1c2hpO1xuXG5leHBvcnQgY29uc3QgY29tbWVudENvbG91ciA9IHBhYmxvO1xuXG5leHBvcnQgY29uc3Qga2V5d29yZENvbG91ciA9IHJhenptYXRheno7XG5cbmV4cG9ydCBjb25zdCByZXNlcnZlZENvbG91ciA9IHJhenptYXRheno7XG5cbmV4cG9ydCBjb25zdCBzdHJpbmdMaXRlcmFsQ29sb3VyID0gaG9rZXlQb2tleTtcblxuZXhwb3J0IGNvbnN0IHR5cGVOYW1lQ29sb3VyID0gcmVnZW50R3JleTtcblxuZXhwb3J0IGNvbnN0IGNvbnRleHROYW1lQ29sb3VyID0gY2FkZXRCbHVlO1xuXG5leHBvcnQgY29uc3QgdmFyaWFibGVOYW1lQ29sb3VyID0gdHJlZVBvcHB5O1xuXG5leHBvcnQgY29uc3QgbWV0YXZhcmlhYmxlTmFtZUNvbG91ciA9IGNhZGV0Qmx1ZTtcblxuZXhwb3J0IGNvbnN0IGxhYmVsTmFtZUNvbG91ciA9IHN5Y2Ftb3JlO1xuXG5leHBvcnQgY29uc3QgbGFiZWxOYW1lSG92ZXJDb2xvdXIgPSBjZWxlcnk7XG5cbmV4cG9ydCBjb25zdCBmYXVsdHlMYWJlbE5hbWVDb2xvdXIgPSB0ZXJyYWNvdHRhO1xuXG5leHBvcnQgY29uc3QgZmF1bHR5TGFiZWxOYW1lSG92ZXJDb2xvdXIgPSBmbGFtaW5nbztcblxuZXhwb3J0IGNvbnN0IGRpc2FibGVkTGFiZWxOYW1lQ29sb3VyID0gcGFibG87XG5cbmV4cG9ydCBjb25zdCBkaXNhYmxlZExhYmVsTmFtZUhvdmVyQ29sb3VyID0gaHVycmljYW5lO1xuXG5leHBvcnQgY29uc3QgcmVmZXJlbmNlTmFtZUNvbG91ciA9IHN5Y2Ftb3JlO1xuXG5leHBvcnQgY29uc3QgcmVmZXJlbmNlTmFtZUhvdmVyQ29sb3VyID0gY2VsZXJ5O1xuXG5leHBvcnQgY29uc3QgZmF1bHR5UmVmZXJlbmNlTmFtZUNvbG91ciA9IHRlcnJhY290dGE7XG5cbmV4cG9ydCBjb25zdCBmYXVsdHlSZWZlcmVuY2VOYW1lSG92ZXJDb2xvdXIgPSBmbGFtaW5nbztcblxuZXhwb3J0IGNvbnN0IGRpc2FibGVkUmVmZXJlbmNlTmFtZUNvbG91ciA9IHBhYmxvO1xuXG5leHBvcnQgY29uc3QgZGlzYWJsZWRSZWZlcmVuY2VOYW1lSG92ZXJDb2xvdXIgPSBodXJyaWNhbmU7XG4iXSwibmFtZXMiOlsiY3VzdG9tQ29sb3VyIiwic3VzaGkiLCJzcGVjaWFsQ29sb3VyIiwiY29tbWVudENvbG91ciIsInBhYmxvIiwia2V5d29yZENvbG91ciIsInJhenptYXRhenoiLCJyZXNlcnZlZENvbG91ciIsInN0cmluZ0xpdGVyYWxDb2xvdXIiLCJob2tleVBva2V5IiwidHlwZU5hbWVDb2xvdXIiLCJyZWdlbnRHcmV5IiwiY29udGV4dE5hbWVDb2xvdXIiLCJjYWRldEJsdWUiLCJ2YXJpYWJsZU5hbWVDb2xvdXIiLCJ0cmVlUG9wcHkiLCJtZXRhdmFyaWFibGVOYW1lQ29sb3VyIiwibGFiZWxOYW1lQ29sb3VyIiwic3ljYW1vcmUiLCJsYWJlbE5hbWVIb3ZlckNvbG91ciIsImNlbGVyeSIsImZhdWx0eUxhYmVsTmFtZUNvbG91ciIsInRlcnJhY290dGEiLCJmYXVsdHlMYWJlbE5hbWVIb3ZlckNvbG91ciIsImZsYW1pbmdvIiwiZGlzYWJsZWRMYWJlbE5hbWVDb2xvdXIiLCJkaXNhYmxlZExhYmVsTmFtZUhvdmVyQ29sb3VyIiwiaHVycmljYW5lIiwicmVmZXJlbmNlTmFtZUNvbG91ciIsInJlZmVyZW5jZU5hbWVIb3ZlckNvbG91ciIsImZhdWx0eVJlZmVyZW5jZU5hbWVDb2xvdXIiLCJmYXVsdHlSZWZlcmVuY2VOYW1lSG92ZXJDb2xvdXIiLCJkaXNhYmxlZFJlZmVyZW5jZU5hbWVDb2xvdXIiLCJkaXNhYmxlZFJlZmVyZW5jZU5hbWVIb3ZlckNvbG91ciJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDOzs7OztBQUU2SCxJQUFBLFFBQWUsV0FBZixlQUFlLENBQUE7QUFFbEosSUFBTUEsWUFBWSxHQUFHQyxRQUFLLE1BQUEsQUFBQztRQUFyQkQsWUFBWSxHQUFaQSxZQUFZO0FBRWxCLElBQU1FLGFBQWEsR0FBR0QsUUFBSyxNQUFBLEFBQUM7UUFBdEJDLGFBQWEsR0FBYkEsYUFBYTtBQUVuQixJQUFNQyxhQUFhLEdBQUdDLFFBQUssTUFBQSxBQUFDO1FBQXRCRCxhQUFhLEdBQWJBLGFBQWE7QUFFbkIsSUFBTUUsYUFBYSxHQUFHQyxRQUFVLFdBQUEsQUFBQztRQUEzQkQsYUFBYSxHQUFiQSxhQUFhO0FBRW5CLElBQU1FLGNBQWMsR0FBR0QsUUFBVSxXQUFBLEFBQUM7UUFBNUJDLGNBQWMsR0FBZEEsY0FBYztBQUVwQixJQUFNQyxtQkFBbUIsR0FBR0MsUUFBVSxXQUFBLEFBQUM7UUFBakNELG1CQUFtQixHQUFuQkEsbUJBQW1CO0FBRXpCLElBQU1FLGNBQWMsR0FBR0MsUUFBVSxXQUFBLEFBQUM7UUFBNUJELGNBQWMsR0FBZEEsY0FBYztBQUVwQixJQUFNRSxpQkFBaUIsR0FBR0MsUUFBUyxVQUFBLEFBQUM7UUFBOUJELGlCQUFpQixHQUFqQkEsaUJBQWlCO0FBRXZCLElBQU1FLGtCQUFrQixHQUFHQyxRQUFTLFVBQUEsQUFBQztRQUEvQkQsa0JBQWtCLEdBQWxCQSxrQkFBa0I7QUFFeEIsSUFBTUUsc0JBQXNCLEdBQUdILFFBQVMsVUFBQSxBQUFDO1FBQW5DRyxzQkFBc0IsR0FBdEJBLHNCQUFzQjtBQUU1QixJQUFNQyxlQUFlLEdBQUdDLFFBQVEsU0FBQSxBQUFDO1FBQTNCRCxlQUFlLEdBQWZBLGVBQWU7QUFFckIsSUFBTUUsb0JBQW9CLEdBQUdDLFFBQU0sT0FBQSxBQUFDO1FBQTlCRCxvQkFBb0IsR0FBcEJBLG9CQUFvQjtBQUUxQixJQUFNRSxxQkFBcUIsR0FBR0MsUUFBVSxXQUFBLEFBQUM7UUFBbkNELHFCQUFxQixHQUFyQkEscUJBQXFCO0FBRTNCLElBQU1FLDBCQUEwQixHQUFHQyxRQUFRLFNBQUEsQUFBQztRQUF0Q0QsMEJBQTBCLEdBQTFCQSwwQkFBMEI7QUFFaEMsSUFBTUUsdUJBQXVCLEdBQUdyQixRQUFLLE1BQUEsQUFBQztRQUFoQ3FCLHVCQUF1QixHQUF2QkEsdUJBQXVCO0FBRTdCLElBQU1DLDRCQUE0QixHQUFHQyxRQUFTLFVBQUEsQUFBQztRQUF6Q0QsNEJBQTRCLEdBQTVCQSw0QkFBNEI7QUFFbEMsSUFBTUUsbUJBQW1CLEdBQUdWLFFBQVEsU0FBQSxBQUFDO1FBQS9CVSxtQkFBbUIsR0FBbkJBLG1CQUFtQjtBQUV6QixJQUFNQyx3QkFBd0IsR0FBR1QsUUFBTSxPQUFBLEFBQUM7UUFBbENTLHdCQUF3QixHQUF4QkEsd0JBQXdCO0FBRTlCLElBQU1DLHlCQUF5QixHQUFHUixRQUFVLFdBQUEsQUFBQztRQUF2Q1EseUJBQXlCLEdBQXpCQSx5QkFBeUI7QUFFL0IsSUFBTUMsOEJBQThCLEdBQUdQLFFBQVEsU0FBQSxBQUFDO1FBQTFDTyw4QkFBOEIsR0FBOUJBLDhCQUE4QjtBQUVwQyxJQUFNQywyQkFBMkIsR0FBRzVCLFFBQUssTUFBQSxBQUFDO1FBQXBDNEIsMkJBQTJCLEdBQTNCQSwyQkFBMkI7QUFFakMsSUFBTUMsZ0NBQWdDLEdBQUdOLFFBQVMsVUFBQSxBQUFDO1FBQTdDTSxnQ0FBZ0MsR0FBaENBLGdDQUFnQyJ9