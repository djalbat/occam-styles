"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _colours = require("../../colours");

var customColour = _colours.sushi;
var commentColour = _colours.pablo;
var keywordColour = _colours.razzmatazz;
var stringLiteralColour = _colours.hokeyPokey;
var typeNameColour = _colours.regentGrey;
var contextNameColour = _colours.cadetBlue;
var variableNameColour = _colours.treePoppy;
var metavariableNameColour = _colours.cadetBlue;
var labelNameColour = _colours.sycamore;
var labelNameHoverColour = _colours.celery;
var faultyLabelNameColour = _colours.terracotta;
var faultyLabelNameHoverColour = _colours.flamingo;
var disabledLabelNameColour = _colours.pablo;
var disabledLabelNameHoverColour = _colours.hurricane;
var referenceNameColour = _colours.sycamore;
var referenceNameHoverColour = _colours.celery;
var faultyReferenceNameColour = _colours.terracotta;
var faultyReferenceNameHoverColour = _colours.flamingo;
var disabledReferenceNameColour = _colours.pablo;
var disabledReferenceNameHoverColour = _colours.hurricane;
var _default = {
  customColour: customColour,
  commentColour: commentColour,
  keywordColour: keywordColour,
  stringLiteralColour: stringLiteralColour,
  typeNameColour: typeNameColour,
  contextNameColour: contextNameColour,
  variableNameColour: variableNameColour,
  metavariableNameColour: metavariableNameColour,
  labelNameColour: labelNameColour,
  labelNameHoverColour: labelNameHoverColour,
  faultyLabelNameColour: faultyLabelNameColour,
  faultyLabelNameHoverColour: faultyLabelNameHoverColour,
  disabledLabelNameColour: disabledLabelNameColour,
  disabledLabelNameHoverColour: disabledLabelNameHoverColour,
  referenceNameColour: referenceNameColour,
  referenceNameHoverColour: referenceNameHoverColour,
  faultyReferenceNameColour: faultyReferenceNameColour,
  faultyReferenceNameHoverColour: faultyReferenceNameHoverColour,
  disabledReferenceNameColour: disabledReferenceNameColour,
  disabledReferenceNameHoverColour: disabledReferenceNameHoverColour
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZsb3JlbmNlLmpzIl0sIm5hbWVzIjpbImN1c3RvbUNvbG91ciIsInN1c2hpIiwiY29tbWVudENvbG91ciIsInBhYmxvIiwia2V5d29yZENvbG91ciIsInJhenptYXRhenoiLCJzdHJpbmdMaXRlcmFsQ29sb3VyIiwiaG9rZXlQb2tleSIsInR5cGVOYW1lQ29sb3VyIiwicmVnZW50R3JleSIsImNvbnRleHROYW1lQ29sb3VyIiwiY2FkZXRCbHVlIiwidmFyaWFibGVOYW1lQ29sb3VyIiwidHJlZVBvcHB5IiwibWV0YXZhcmlhYmxlTmFtZUNvbG91ciIsImxhYmVsTmFtZUNvbG91ciIsInN5Y2Ftb3JlIiwibGFiZWxOYW1lSG92ZXJDb2xvdXIiLCJjZWxlcnkiLCJmYXVsdHlMYWJlbE5hbWVDb2xvdXIiLCJ0ZXJyYWNvdHRhIiwiZmF1bHR5TGFiZWxOYW1lSG92ZXJDb2xvdXIiLCJmbGFtaW5nbyIsImRpc2FibGVkTGFiZWxOYW1lQ29sb3VyIiwiZGlzYWJsZWRMYWJlbE5hbWVIb3ZlckNvbG91ciIsImh1cnJpY2FuZSIsInJlZmVyZW5jZU5hbWVDb2xvdXIiLCJyZWZlcmVuY2VOYW1lSG92ZXJDb2xvdXIiLCJmYXVsdHlSZWZlcmVuY2VOYW1lQ29sb3VyIiwiZmF1bHR5UmVmZXJlbmNlTmFtZUhvdmVyQ29sb3VyIiwiZGlzYWJsZWRSZWZlcmVuY2VOYW1lQ29sb3VyIiwiZGlzYWJsZWRSZWZlcmVuY2VOYW1lSG92ZXJDb2xvdXIiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBRUE7O0FBRUEsSUFBTUEsWUFBWSxHQUFHQyxjQUFyQjtBQUVBLElBQU1DLGFBQWEsR0FBR0MsY0FBdEI7QUFFQSxJQUFNQyxhQUFhLEdBQUdDLG1CQUF0QjtBQUVBLElBQU1DLG1CQUFtQixHQUFHQyxtQkFBNUI7QUFFQSxJQUFNQyxjQUFjLEdBQUdDLG1CQUF2QjtBQUVBLElBQU1DLGlCQUFpQixHQUFHQyxrQkFBMUI7QUFFQSxJQUFNQyxrQkFBa0IsR0FBR0Msa0JBQTNCO0FBRUEsSUFBTUMsc0JBQXNCLEdBQUdILGtCQUEvQjtBQUVBLElBQU1JLGVBQWUsR0FBR0MsaUJBQXhCO0FBRUEsSUFBTUMsb0JBQW9CLEdBQUdDLGVBQTdCO0FBRUEsSUFBTUMscUJBQXFCLEdBQUdDLG1CQUE5QjtBQUVBLElBQU1DLDBCQUEwQixHQUFHQyxpQkFBbkM7QUFFQSxJQUFNQyx1QkFBdUIsR0FBR3BCLGNBQWhDO0FBRUEsSUFBTXFCLDRCQUE0QixHQUFHQyxrQkFBckM7QUFFQSxJQUFNQyxtQkFBbUIsR0FBR1YsaUJBQTVCO0FBRUEsSUFBTVcsd0JBQXdCLEdBQUdULGVBQWpDO0FBRUEsSUFBTVUseUJBQXlCLEdBQUdSLG1CQUFsQztBQUVBLElBQU1TLDhCQUE4QixHQUFHUCxpQkFBdkM7QUFFQSxJQUFNUSwyQkFBMkIsR0FBRzNCLGNBQXBDO0FBRUEsSUFBTTRCLGdDQUFnQyxHQUFHTixrQkFBekM7ZUFFZTtBQUNiekIsRUFBQUEsWUFBWSxFQUFaQSxZQURhO0FBRWJFLEVBQUFBLGFBQWEsRUFBYkEsYUFGYTtBQUdiRSxFQUFBQSxhQUFhLEVBQWJBLGFBSGE7QUFJYkUsRUFBQUEsbUJBQW1CLEVBQW5CQSxtQkFKYTtBQUtiRSxFQUFBQSxjQUFjLEVBQWRBLGNBTGE7QUFNYkUsRUFBQUEsaUJBQWlCLEVBQWpCQSxpQkFOYTtBQU9iRSxFQUFBQSxrQkFBa0IsRUFBbEJBLGtCQVBhO0FBUWJFLEVBQUFBLHNCQUFzQixFQUF0QkEsc0JBUmE7QUFTYkMsRUFBQUEsZUFBZSxFQUFmQSxlQVRhO0FBVWJFLEVBQUFBLG9CQUFvQixFQUFwQkEsb0JBVmE7QUFXYkUsRUFBQUEscUJBQXFCLEVBQXJCQSxxQkFYYTtBQVliRSxFQUFBQSwwQkFBMEIsRUFBMUJBLDBCQVphO0FBYWJFLEVBQUFBLHVCQUF1QixFQUF2QkEsdUJBYmE7QUFjYkMsRUFBQUEsNEJBQTRCLEVBQTVCQSw0QkFkYTtBQWViRSxFQUFBQSxtQkFBbUIsRUFBbkJBLG1CQWZhO0FBZ0JiQyxFQUFBQSx3QkFBd0IsRUFBeEJBLHdCQWhCYTtBQWlCYkMsRUFBQUEseUJBQXlCLEVBQXpCQSx5QkFqQmE7QUFrQmJDLEVBQUFBLDhCQUE4QixFQUE5QkEsOEJBbEJhO0FBbUJiQyxFQUFBQSwyQkFBMkIsRUFBM0JBLDJCQW5CYTtBQW9CYkMsRUFBQUEsZ0NBQWdDLEVBQWhDQTtBQXBCYSxDIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHN1c2hpLCBwYWJsbywgcmF6em1hdGF6eiwgaG9rZXlQb2tleSwgcmVnZW50R3JleSwgY2FkZXRCbHVlLCB0cmVlUG9wcHksIHN5Y2Ftb3JlLCBjZWxlcnksIHRlcnJhY290dGEsIGZsYW1pbmdvLCBodXJyaWNhbmUgfSBmcm9tIFwiLi4vLi4vY29sb3Vyc1wiO1xuXG5jb25zdCBjdXN0b21Db2xvdXIgPSBzdXNoaTtcblxuY29uc3QgY29tbWVudENvbG91ciA9IHBhYmxvO1xuXG5jb25zdCBrZXl3b3JkQ29sb3VyID0gcmF6em1hdGF6ejtcblxuY29uc3Qgc3RyaW5nTGl0ZXJhbENvbG91ciA9IGhva2V5UG9rZXk7XG5cbmNvbnN0IHR5cGVOYW1lQ29sb3VyID0gcmVnZW50R3JleTtcblxuY29uc3QgY29udGV4dE5hbWVDb2xvdXIgPSBjYWRldEJsdWU7XG5cbmNvbnN0IHZhcmlhYmxlTmFtZUNvbG91ciA9IHRyZWVQb3BweTtcblxuY29uc3QgbWV0YXZhcmlhYmxlTmFtZUNvbG91ciA9IGNhZGV0Qmx1ZTtcblxuY29uc3QgbGFiZWxOYW1lQ29sb3VyID0gc3ljYW1vcmU7XG5cbmNvbnN0IGxhYmVsTmFtZUhvdmVyQ29sb3VyID0gY2VsZXJ5O1xuXG5jb25zdCBmYXVsdHlMYWJlbE5hbWVDb2xvdXIgPSB0ZXJyYWNvdHRhO1xuXG5jb25zdCBmYXVsdHlMYWJlbE5hbWVIb3ZlckNvbG91ciA9IGZsYW1pbmdvO1xuXG5jb25zdCBkaXNhYmxlZExhYmVsTmFtZUNvbG91ciA9IHBhYmxvO1xuXG5jb25zdCBkaXNhYmxlZExhYmVsTmFtZUhvdmVyQ29sb3VyID0gaHVycmljYW5lO1xuXG5jb25zdCByZWZlcmVuY2VOYW1lQ29sb3VyID0gc3ljYW1vcmU7XG5cbmNvbnN0IHJlZmVyZW5jZU5hbWVIb3ZlckNvbG91ciA9IGNlbGVyeTtcblxuY29uc3QgZmF1bHR5UmVmZXJlbmNlTmFtZUNvbG91ciA9IHRlcnJhY290dGE7XG5cbmNvbnN0IGZhdWx0eVJlZmVyZW5jZU5hbWVIb3ZlckNvbG91ciA9IGZsYW1pbmdvO1xuXG5jb25zdCBkaXNhYmxlZFJlZmVyZW5jZU5hbWVDb2xvdXIgPSBwYWJsbztcblxuY29uc3QgZGlzYWJsZWRSZWZlcmVuY2VOYW1lSG92ZXJDb2xvdXIgPSBodXJyaWNhbmU7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY3VzdG9tQ29sb3VyLFxuICBjb21tZW50Q29sb3VyLFxuICBrZXl3b3JkQ29sb3VyLFxuICBzdHJpbmdMaXRlcmFsQ29sb3VyLFxuICB0eXBlTmFtZUNvbG91cixcbiAgY29udGV4dE5hbWVDb2xvdXIsXG4gIHZhcmlhYmxlTmFtZUNvbG91cixcbiAgbWV0YXZhcmlhYmxlTmFtZUNvbG91cixcbiAgbGFiZWxOYW1lQ29sb3VyLFxuICBsYWJlbE5hbWVIb3ZlckNvbG91cixcbiAgZmF1bHR5TGFiZWxOYW1lQ29sb3VyLFxuICBmYXVsdHlMYWJlbE5hbWVIb3ZlckNvbG91cixcbiAgZGlzYWJsZWRMYWJlbE5hbWVDb2xvdXIsXG4gIGRpc2FibGVkTGFiZWxOYW1lSG92ZXJDb2xvdXIsXG4gIHJlZmVyZW5jZU5hbWVDb2xvdXIsXG4gIHJlZmVyZW5jZU5hbWVIb3ZlckNvbG91cixcbiAgZmF1bHR5UmVmZXJlbmNlTmFtZUNvbG91cixcbiAgZmF1bHR5UmVmZXJlbmNlTmFtZUhvdmVyQ29sb3VyLFxuICBkaXNhYmxlZFJlZmVyZW5jZU5hbWVDb2xvdXIsXG4gIGRpc2FibGVkUmVmZXJlbmNlTmFtZUhvdmVyQ29sb3VyXG59O1xuIl19